new_data1
train_3[i,-257] + train_3[i-1,-257]
rebuilt_data <- function(dataset){
for (i in range(ncol(dataset))){
if (i%%2==0){
dataset[i-1,] = dataset[i-1,] + dataset[i,]
}
}
return(dataset)
}
train_3_new <- rebuilt_data(train_3)
View(train_3_new)
all(train_3 == train_3_new)
rebuilt_data <- function(dataset){
for (i in range(ncol(dataset))){
if (i%%2==0){
dataset[i-1,] = dataset[i-1,] + dataset[i,]
}
}
return(dataset)
}
train_3_new <- rebuilt_data(train_3)
all(train_3 == train_3_new)
rebuilt_data <- function(dataset){
for (i in range(nrow(dataset))){
if (i%%2==0){
dataset[i-1,] = dataset[i-1,] + dataset[i,]
}
}
return(dataset)
}
train_3_new <- rebuilt_data(train_3)
all(train_3 == train_3_new)
train_3 == train_3_new
rebuilt_data <- function(dataset){
dataset <- as.matrix(dataset)
for (i in range(nrow(dataset))){
if (i%%2==0){
dataset[i-1,] = dataset[i-1,] + dataset[i,]
}
}
dataset <- as.data.frame(dataset)
return(dataset)
}
train_3_new <- rebuilt_data(train_3)
train_3 == train_3_new
train_3[1,] = train_3[1,] + train_3[2,]
train_3[1,] + train_3[2,]
train_3[1,]
rebuilt_data <- function(dataset){
for (i in range(nrow(dataset))){
if (i%%2==0){
dataset[i-1,] = dataset[i-1,] + dataset[i,]
}
}
return(dataset)
}
train_3_new <- rebuilt_data(train_3)
train_3_new
train_3 == train_3_new
glm.fit=glm(number~.-number,data=train_data,family=multinomial)
glm.fit=glmnet(number~.-number,data=train_data,family=multinomial)
library(glmnet)
glm.fit=glmnet(number~.-number,data=train_data,family=multinomial)
glm.fit=glmnet(x = train_data[,-number],y = train_data$number,family = multinomial)
glm.fit=glmnet(x = train_data[,-number],y = train_data$number,family = 'multinomial')
library(glmnet)
glm.fit=glmnet(x = train_data[,-number],y = train_data$number,family = 'multinomial')
x
x = train_data[,-number]
x
library(glmnet)
glm.fit=glmnet(x = train_data[,-257],y = train_data$number,family = 'multinomial')
x = train_data[,-257]
x
?`glmnet
?glmnet
?glmnet
library(glmnet)
glm.fit=glmnet(x = train_data[,-257],y = train_data$number,family = 'multinomial',)
library(glmnet)
glm.fit=glmnet(x = train_data[,-257],y = train_data$number,family = 'multinomial',type.multinomial="grouped")
library(glmnet)
glm.fit=glmnet(x = train_data[,-257],y = train_data$number,family = 'multinomial')
train_3[1,] + train_3 [2,]
train_new <- train_3[1,] + train_3 [2,]
train_new
train_new[1,] <- train_3[1,] + train_3 [2,]
train_new
train_new[1,] <- train_3[1,] + train_3[2,]
train_new[2,] <- train_3[3,] + train_3[4,]
train_new
train_new_new[,1] <- train_new[,1] +  train_new[,2]
train_new
dim(train_new) <- dim(train_3)
dim(train_new)[1] <- dim(train_3)[1]
train_new <- data.frame(NA,ncol=dim(train_3)[2])
train_new
ncol(train_new)=100
rebulit_data <- function(dataset){
new_data <- dataset
j=0
for(i in range(ncol(dataset))){
if (i%%2==0){
new_data[,i] = dataset[,i-1]
j = j + 1
}
}
return(new_data)
}
rebulit_data(train_3)
train_new[1,] <- train_3[1,] + train_3[2,]
train_new[2,] <- train_3[3,] + train_3[4,]
train_new
train_new_new[,1] <- train_new[,1] +  train_new[,2]
rebulit_data <- function(dataset){
new_data <- dataset
j=0
for(i in range(ncol(dataset))){
if (i%%2==0){
new_data[,i] = dataset[,i-1] + dataset[,i]
j = j + 1
}
}
return(new_data)
}
rebulit_data(train_3)
new_data == train_3
rebulit_data <- function(dataset){
new_data <- dataset
j=0
for(i in range(ncol(dataset))){
if (i%%2==0){
new_data[,i] = dataset[,i-1] + dataset[,i]
j = j + 1
}
}
return(new_data)
}
new_data <- rebulit_data(train_3)
new_data == train_3
library(glmnet)
glm.fit=glmnet(x = train_data[,-257],y = train_data$number,family = 'multinomial')
rebulit_data <- function(dataset){
new_data <- dataset
j=0
for(i in range(ncol(dataset))){
if (i%%2==0){
new_data[,i] = dataset[,i-1] + dataset[,i]
j = j + 1
}
}
return(new_data)
}
new_data <- rebulit_data(train_3)
new_data == train_3
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/staistical machine learning/homework/homework two")
train_3 <- read.table("train_3.txt", header=FALSE, sep=",")
train_3$number <- 3
train_5 <- read.table("train_5.txt", header=FALSE, sep=",")
train_5$number <- 5
train_8 <- read.table("train_8.txt", header=FALSE, sep=",")
train_8$number <- 8
train_data <- rbind(train_3,train_5,train_8)
test <- read.table("zip_test.txt",header = FALSE,sep = " ")
number <- test[,1]
test_data <- test[,-1]
test_data$number <- number
colnames(test_data) <- c("V1",colnames(test_data)[-256])
# we only need the testing data which is represent the number 3,5,8
test_data <- test_data[(test_data$number==3 | test_data$number==5|test_data$number==8),]
library(MASS)
lda.model<-lda(number ~.-number , data=train_data)
lda.pred1 = predict(lda.model, train_data[,-257])
table(train_data$number, lda.pred1$class)
lda.pred2 = predict(lda.model, test_data[,-257])
table(test_data$number, lda.pred2$class)
rebulit_data <- function(dataset){
new_data <- dataset
j=0
for(i in range(ncol(dataset))){
if (i%%2==0){
new_data[,i] = dataset[,i-1] + dataset[,i]
j = j + 1
}
}
return(new_data)
}
new_data <- rebulit_data(train_3)
new_data == train_3
library(psych)
x_data <- train_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score <- as.data.frame(pc$scores)
colnames(score) <- colnames(train_data)[1:49]
score$number <- train_data$number
lda.model2<-lda(number ~.-number , data=score)
lda.pred3 = predict(lda.model2, score[,-50])
table(score$number, lda.pred3$class)
lda.pred4 = predict(lda.model2, test_data[,-257])
table(test_data$number, lda.pred4$class)
apply(train_3, 2, sum_together)
sum_together <- function(vector){
sum <- c()
for (i in range(length(vector))) {
sum <- c(sum,vector[i-1] + vector[i])
}
return(sum)
}
apply(train_3, 2, sum_together)
a <- apply(train_3, 2, sum_together)
View(a)
sum_together <- function(vector){
sum <- c()
for (i in range(length(vector))) {
if (i%%2==0){
sum <- c(sum,vector[i-1] + vector[i])
}
}
return(sum)
}
a <- apply(train_3, 2, sum_together)
View(a)
ac(1,2,3,4,5,6,7,8)
a=c(1,2,3,4,5,6,7,8)
a[1::2]
a[1:2:2]
seq(1,2,2)
seq(1,,2)
new_train_3 <- rebuilt_data(train_3)
new_train_3
View(new_train_3)
dim(new_train_3)
new_train_3 == train_3
rebulit_data <- function(dataset) {
set1 <- dataset[seq(1,nrow(dataset),2),]
set2 <- dataset[seq(2,nrow(dataset),2),]
set3 <- set1 + set2
set3 <- set3[,-257]
set4 <- set3[,seq(1,256,2)]
set5 <- set3[,seq(2,256,2)]
set6 <- set4+set5
return(set6)
}
new_train_3 <- rebuilt_data(train_3)
new_train_3 == train_3
train_3[seq(1,nrow(dataset),2),]
train_3[seq(1,nrow(train_3),2),]
seq(1,675,2)
a <- train_3[seq(1,nrow(train_3),2),]
dim(a)
b <- train_3[seq(2,nrow(train_3),2),]
dim(b)
a == b
c <- a+b
dim(c)
e <- c[,seq(1,256,2)]
dim(e)
f <- c[,seq(2,256,2)]
g <- e+f
dim(g)
# rebulit training 3
a <- train_3[seq(1,nrow(train_3),2),]
b <- train_3[seq(2,nrow(train_3),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_3 <- e+f
new_train_3$number = 3
# rebulit training 5
# rebulit training 8
dim(new_train_3)
# rebulit training 3
a <- train_3[seq(1,nrow(train_3),2),]
b <- train_3[seq(2,nrow(train_3),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_3 <- e+f
new_train_3$number = 3
# rebulit training 5
a <- train_5[seq(1,nrow(train_5),2),]
b <- train_5[seq(2,nrow(train_5),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_5 <- e+f
new_train_5$number = 5
# rebulit training 8
a <- train_8[seq(1,nrow(train_8),2),]
b <- train_8[seq(2,nrow(train_8),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_8 <- e+f
new_train_8$number = 8
new_train <- rbind(new_train_3,new_train_5,new_train_8)
dim(new_train)
new_train[,129]
lda.mode6<-lda(number ~.-number , data=new_train_data)
new_train <- rbind(new_train_3,new_train_5,new_train_8)
lda.mode6<-lda(number ~.-number , data=new_train_data)
lda.mode6<-lda(number ~.-number , data=new_train)
lda.pred6 = predict(lda.mode6, new_train[,-129])
table(new_train_data$number, lda.pred6$class)
table(new_train$number, lda.pred6$class)
new_train <- rbind(new_train_3,new_train_5,new_train_8)
lda.mode5<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.mode5, new_train[,-129])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model5, test_data[,-257])
lda.model5<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.mode5, new_train[,-129])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model5, test_data[,-257])
table(test_data$number, lda.pred6$class)
# rebulit training 3
a <- train_3[seq(1,nrow(train_3),2),]
b <- train_3[seq(2,nrow(train_3),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_3 <- e+f
new_train_3$number = 3
# rebulit training 5
a <- train_5[seq(1,nrow(train_5),2),]
b <- train_5[seq(2,nrow(train_5),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_5 <- e+f
new_train_5$number = 5
# rebulit training 8
a <- train_8[seq(1,nrow(train_8),2),]
b <- train_8[seq(2,nrow(train_8),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_8 <- e+f
new_train_8$number = 8
new_train <- rbind(new_train_3,new_train_5,new_train_8)
lda.model3<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.mode3, new_train[,-129])
lda.model3<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.model3, new_train[,-129])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model3, test_data[,-257])
table(test_data$number, lda.pred6$class)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/staistical machine learning/homework/homework two")
train_3 <- read.table("train_3.txt", header=FALSE, sep=",")
train_3$number <- 3
train_5 <- read.table("train_5.txt", header=FALSE, sep=",")
train_5$number <- 5
train_8 <- read.table("train_8.txt", header=FALSE, sep=",")
train_8$number <- 8
train_data <- rbind(train_3,train_5,train_8)
test <- read.table("zip_test.txt",header = FALSE,sep = " ")
number <- test[,1]
test_data <- test[,-1]
test_data$number <- number
colnames(test_data) <- c("V1",colnames(test_data)[-256])
# we only need the testing data which is represent the number 3,5,8
test_data <- test_data[(test_data$number==3 | test_data$number==5|test_data$number==8),]
library(MASS)
lda.model<-lda(number ~.-number , data=train_data)
lda.pred1 = predict(lda.model, train_data[,-257])
table(train_data$number, lda.pred1$class)
lda.pred2 = predict(lda.model, test_data[,-257])
table(test_data$number, lda.pred2$class)
43/492
library(psych)
x_data <- train_data[,-257]
x_data <- scale(x_data)
pc <- principal(x_data,nfactors = 49,scores = T,rotate = "varimax")
score <- as.data.frame(pc$scores)
colnames(score) <- colnames(train_data)[1:49]
score$number <- train_data$number
lda.model2<-lda(number ~.-number , data=score)
lda.pred3 = predict(lda.model2, score[,-50])
table(score$number, lda.pred3$class)
lda.pred4 = predict(lda.model2, test_data[,-257])
table(test_data$number, lda.pred4$class)
337/492
# rebulit training 3
a <- train_3[seq(1,nrow(train_3),2),]
b <- train_3[seq(2,nrow(train_3),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_3 <- e+f
new_train_3$number = 3
# rebulit training 5
a <- train_5[seq(1,nrow(train_5),2),]
b <- train_5[seq(2,nrow(train_5),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_5 <- e+f
new_train_5$number = 5
# rebulit training 8
a <- train_8[seq(1,nrow(train_8),2),]
b <- train_8[seq(2,nrow(train_8),2),]
c <- a+b
e <- c[,seq(1,256,2)]
f <- c[,seq(2,256,2)]
new_train_8 <- e+f
new_train_8$number = 8
new_train <- rbind(new_train_3,new_train_5,new_train_8)
lda.model3<-lda(number ~.-number , data=new_train)
lda.pred5 = predict(lda.model3, new_train[,-129])
table(new_train$number, lda.pred5$class)
lda.pred6 = predict(lda.model3, test_data[,-257])
table(test_data$number, lda.pred6$class)
337/492
setwd("C:/Users/cheny/Desktop/study/second term/Advanced Data Analysis/homework/homework four")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cheny/Desktop/study/second term/Advanced Data Analysis/homework/homework four")
data <- read.csv("mileage.csv",header = TRUE)
fit_1 <- lm(y~factor(x1) + x2,data = data)
summary(fit_1)
confint(fit_1)
confint(fit_1,level = 95%)
confint(fit_1,level = 0.95)
aov(fit)
aov(fit_1)
aov(fit_1)
summary(aov(fit_1))
?anova
anova(fit_1)
fit_1 <- lm(y~factor(x1) + x2,data = data)
summary(fit_1)
# first input the data
average_yield <- c(5.1,5.3,5.3,5.2,4.8,5.3,5.4,6.0,5.7,4.8,4.8,4.5,5.3,4.7,5.5,5.0,4.4,4.9,4.7,4.3,4.7,4.4,4.7,4.1)
seeding_rate <- c(rep(c(25,50,75,100,125,150),4))
seeding_rate
# first input the data
average_yield <- c(5.1,5.3,5.3,5.2,4.8,5.3,5.4,6.0,5.7,4.8,4.8,4.5,5.3,4.7,5.5,5.0,4.4,4.9,4.7,4.3,4.7,4.4,4.7,4.1)
seeding_rate <- c(rep(c(25,50,75,100,125,150),4))
field <- c(rep(1,6),rep(2,6),rep(3,6),rep(4,6))
data_2 <- cbind(average_yield,seeding_rate,field)
View(data_2)
anova(data_2)
data_2 <- as.matrix(cbind(average_yield,seeding_rate,field))
View(data_2)
anova(data_2)
data_2 <- as.data.frame(cbind(average_yield,seeding_rate,field))
View(data_2)
anova(data_2)
fit_2 <- lm(average_yield~factor(seeding_rate)+factor(field),data = data_2)
anova(data_2)
anova(fit_2)
fit_3 <- lm(cutting_speed~factor(block)+factor(treatment),data = data_3)
# first input the data
cutting_speed <- c(12,2,1,8,7,20,14,17,12,17,13,7,13,8,14,11,5,10,3,6)
block <- c(rep(c(1,2,3,4,5),4))
treatment <- c(rep(1,5),rep(2,5),rep(3,5),rep(4,5))
data_3 <- as.data.frame(cbind(cutting_speed,block,treatment))
fit_3 <- lm(cutting_speed~factor(block)+factor(treatment),data = data_3)
anova(fit_2)
# first input the data
cutting_speed <- c(12,2,1,8,7,20,14,17,12,17,13,7,13,8,14,11,5,10,3,6)
block <- c(rep(c(1,2,3,4,5),4))
treatment <- c(rep(1,5),rep(2,5),rep(3,5),rep(4,5))
data_3 <- as.data.frame(cbind(cutting_speed,block,treatment))
fit_3 <- lm(cutting_speed~factor(block)+factor(treatment),data = data_3)
anova(fit_2)
# first input the data
cutting_speed <- c(12,2,1,8,7,20,14,17,12,17,13,7,13,8,14,11,5,10,3,6)
block <- c(rep(c(1,2,3,4,5),4))
treatment <- c(rep(1,5),rep(2,5),rep(3,5),rep(4,5))
data_3 <- as.data.frame(cbind(cutting_speed,block,treatment))
fit_3 <- lm(cutting_speed~factor(block)+factor(treatment),data = data_3)
anova(fit_3)
# first input the data
cutting_speed <- c(12,2,1,8,7,20,14,17,12,17,13,7,13,8,14,11,5,10,3,6)
block <- c(rep(c(1,2,3,4,5),4))
treatment <- c(rep(1,5),rep(2,5),rep(3,5),rep(4,5))
data_3 <- as.data.frame(cbind(cutting_speed,block,treatment))
fit_3 <- lm(cutting_speed~factor(block)+factor(treatment),data = data_3)
anova(fit_3)
confint(fit_3)
confint(fit_3,level=1-0.05/4)
pairwise.t.test(data_3$cutting_speed,data_3$treatment,pool.sd=TRUE,p.adjust.method="bonf" )
# input the data
yield <- c(192,195,292,249,190,203,218,210,214,139,245,163,221,152,204,134)
# input the data
yield <- c(192,195,292,249,190,203,218,210,214,139,245,163,221,152,204,134)
treatment <- c(4,1,3,2,1,4,2,3,3,2,1,4,2,3,4,1)
cow <- rep(c(1,2,3,4),4)
period <- c(rep(1,4),rep(2,4),rep(3,4),rep(4,4))
data_4 <- as.data.frame(cbind(yield,treatment,cow,period))
View(data_4)
fit_4 <- lm(yield~treatment+cow+period,data = data_4)
# input the data
yield <- c(192,195,292,249,190,203,218,210,214,139,245,163,221,152,204,134)
treatment <- c(4,1,3,2,1,4,2,3,3,2,1,4,2,3,4,1)
cow <- rep(c(1,2,3,4),4)
period <- c(rep(1,4),rep(2,4),rep(3,4),rep(4,4))
data_4 <- as.data.frame(cbind(yield,treatment,cow,period))
fit_4 <- lm(yield~treatment+cow+period,data = data_4)
anova(fit_4)
# input the data
yield <- c(192,195,292,249,190,203,218,210,214,139,245,163,221,152,204,134)
treatment <- c(4,1,3,2,1,4,2,3,3,2,1,4,2,3,4,1)
cow <- rep(c(1,2,3,4),4)
period <- c(rep(1,4),rep(2,4),rep(3,4),rep(4,4))
data_4 <- as.data.frame(cbind(yield,treatment,cow,period))
fit_4 <- lm(yield~treatment+cow+period,data = data_4)
anova(fit_4)
